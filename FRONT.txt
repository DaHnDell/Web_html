DahnDellStudio -> web

hd = 1280 * 720;

fhd = 1920 * 1080;

qhd = 2560 * 1440;

4k = 3800 * 2144;

16 : 9
16 : 10




<img> 태그는 인라인 요소임에도 크기 조정이 가능하다.


<email> input 에서는 일종의 유효성 검사를 시행해 준다. 키보드도 변경된다.
<tel> input, <url> 등도 같이 작동한다.

유효성 검증의 오류메세지를 조금 더 예쁘게 수정 할 수도 있는데,
이 과정에서는 기존의 유효성 검증을 무시하는 명령어를 사용해야 한다. 


색의 3원색 - hue s l 
빛의 3원색 - 
투명도는 알파값임

css 는 글자색 뿐 아니라 배경색, 테두리색 등 다양한 css 속성들이 적용된다.

라디오 값에는 밸류값과 네임값이 있어야함

테이블에서 탭인덱스 요소를 통해 탭을 통한 접근순서를 정할 수 있다. 하지만 이에 대한 사용은 권장되지 않는 편이다.

불린 속성 = 속성값 한개만 있는 것. (checked)
읽기 속성만 있는 경우에도 가능.

button type에서는 button이 기본값이다. 

readonly 속성을 주면 읽기 전용이 된다.

autocomplete 

header / section / footer / nav / article / aside 

audio autoplay 등의 자동 재생 방식은 굉장히 위험함. 이러한 방식은 사용자에게 불쾌감을 줄 수 있기 때문임.











cascade = 정의 내역이 하위로 상속된다라는 의미를 지닌다.

마지막 부분의 ;는 없어도 된다. 
minify = 축소
uglify = 난독화



hover, required, disabled 등등등
first, last 등등등 요소 선택자들도 있고, 어ㅗㅁ청나게 많지만
type, id, class 선택자는 확실하게 익혀 두쟈


text - indent = 들여쓰기 기호를 부여해준다. 
css 할때는 항상 f12로 개발자 도구를 봐 가면서 해야만 함.

html에서는 항상 head 와 body 를 자손으로 가진다. 

+ 기호로 인접 형태 선택자 사용 가능 
우선순위 덮어쓰기도 가능. 



~= 유일하게 abc 이거나 여러 개의 class 명 중 하나가 'abc' 인 요소
= abc 이거나 abc~ 로 시작하는 p 요소 
*= class 명에 철자 'abc' 가 포함되어 있는 요소


bem 규칙

하이펀 
클래스 이름을 속서으이 값이 중요할 때 사용한다.
값이 상관 없을 때는 disabled로 표현한다. 

키 밸류 

좋은 네이밍을 만들기 위한 규칙들 = 시작 이름은 영문 대문자, 숫자, 특수문자로 시작할 수 있다 
네이밍의 조합은 형태 의미 순서 상태 순으로 작성한다.
캔슬 _ 버튼 _ 오프 _ 01 이런식으로 짓지 말고
버튼 _ 캔슬 _ 01 _ 오프 이런 식으로 지어야 함 

네이밍 규칙의 언더스코어 조합은 파일, 폴더, 이미지에 사용한다. 
클래스 이름을 지을 때는 하이펀 쓰고, 이는 자바스크립트와 구분하기 위해서이다




레이아웃 예약어 

#wrapper
#header
#container
#content
#footer
#popWrapper
#popHeader
#popContainer
#popContent
#pop

px = 픽셀 단위 
% 기준 = 상대가 가지고있던 무언가에 대해 비례한 값
em = 부모 요소의 글자 크기를 100% 기준으로 계산한 100분의 1 단위
pt = 글자의 

픽셀과 em 위주로 많이 사용



1 em = 16px



사이트 용 폰트 크기는 14~
앱 용 폰트는 여기서 또 다른 경우가 있다. 


line-height를 통해 세로 중앙정렬을 정해 줄 수 있다.

flex-layout 


아래 두개가 세트임.
word-wrap : break-word;
영문을 띄어쓰기 없이 길게 입력하면 width 값을 주어도 박스 밖으로 튀어 나오게 됩니다.
아스키 속성의 글자들은 빠져나오지 않게 됩니다. 


white-space
normal = 연속 공백들과 줄바꿈이 하나의 공백으로 처리 -> 길면 줄바꿈 일어남 
nowrap = 연속 공백들과 줄바꿈이 하나의 공백으로 처리 -> 길어도 줄바꿈 없이 박스 밖으로 나감
pre = 연속 공백들과 줄바꿈이 소스 그대로 표현됨 
pre-wrap = 연속 공백들과 줄바꿈이 소스 그대로 표현되나, 길면 줄바꿈이 일어난다.
pre-line = 연속 공백들이 하나의 공백으로 처리, 줄바꿈은 소스 그대로 표현되나, 길면 줄바꿈이 일어난다.


display 
요소의 성격을 바꿔주는 속성으로서 디스플레이가 어떻게 설정되어 있느냐에 따라서 사용할 수 있는 속성들이 달라진다.
대부분 display - none 을 활용하여 사용한다.

아코디언과 같은 jquery에서 배우는 내용도 html의 디스플레이를 활용해서 높낮이의 제어를 이용한 
사용자의 시야에 대한 접근성을 조정할 수 있다.

롤링 배너


block 
inline
inline-block = 크기 변경이 가능한 이미지 파일 의 느낌
none = 요소를 보이지 않게 숨기고 흔적도 숨김

indent 속성을 활용해서 (음수값을 주면) 이미지를 숨길 수도 있다.

repeat는 백그라운드 속성이 있어야만 작동한다.

쿠키의 개념은 자바스크립트에서 다시 등장한다. 

box model은 css에서 매우 중요한 개념임
box란 컨텐츠가 자리하는 영역을 말하는 것으로, 너비, 높이, 안 여백, 바깥 여백, 테두리 등의 블록 요소에서 사용됨.

margin = 둘 사이의 거리가 이정도 있었으면 좋겠다,

padding과 margin 값 의 사이의 차이점을 정확하게 이해해야 한다. 


border의 픽셀값을 상하좌우

정사각형의 정원을 변경할 때 길이값의 절반50%가 된다


top - bottom은 무조건 렐러티브에 대한 개념의 이해가 필요하다. 






____________________________________________________________________________________________________________________________________


box-shadow - text shadow랑 같은데, 속성이 두개 더 추가됩니다. blur값과 spread 값입니다. 
각각 흐릿한 정도, 그림자의 확장을 의미합니다. 예시로, 외부 스프레드를 할 경우 양각형태, 내부의경우 음각 형태를 띄게 됩니다.

textarea - 사용자가 입력할 수 있고 크기를 편집할 수 있는 텍스트 상자.

appearance - pc 모바일 기기 등 기기별 화면의 차이 정도로 인한 문제 해결을 위해 사용합니다.

transform - 2차원에서는 x y 3차원에서는 x y z를 사용합니다. z는 관통축으로 우리가 일반적으로 아는 회전의 개념이 적용됩니다.

rotate - z축 회전으로 우리가 아는 일반적인 각도 회전입니다.

scale - 1을 100%로 치는 것을 기준으로 X축과 Y축에 대한 조정비율을 상수로 입력하면 확대 및 축소가 가능합니다.

skew - 말풍선 삼각형처럼 찌그러뜨리기가 가능합니다.

matrix - = 위 모든 기능을 6개의 인자값으로 받아서 한번에 적용합니다.
		
transition - 보통 색 변경 자체에 대한 자연스러운 중간값 프레임 처리를 위해 사용합니다. property, 즉 트랜지션을 걸게 될 대상을 
		지칭하는 속성이 필요하고, duration, 즉 전환되는데 걸리는 시간의 숫자 뒤에 초 단위인 s를 붙여 사용하는 속성이 필요합니다.

transtion - timing function  - 변화의 속도는 점점 빨라지게 설정됩니다. 위 자리에 delay를 사용할 경우 지연을 걸 수도 있습니다.
위 항목에 따른 속성 값 예문은 여러가지가 있는데, linear(시작부터 끝까지 동등한 속도), ease, ease-in, ease-out, ease-in-out이 있으며, 추가적으로
큐빅 베지어(cubic-bezier 함수를 활용하여 시간에 따른 진척도를 지정할 수 있음)도 활용이 가능합니다. 
구글링 할 경우 큐빅 베지어 설정을 전일 이미지 생성기 사이트처럼 사용 가능.

keyframe - 이를 통해 css animation을 정의할 수 있습니다. 단 스타일시트 부분에 @keyframe 을 통해 선언하는 과정이 필요합니다. 
꼭 한 가지 속성값만을 가질 필요는 없습니다. 예를 들어, 0부터 100까지의 %게이지를 통해 
각각의 %진행도에 따른 점진적 변경을 정의할 수 있습니다. (0%일때, 10%일때,,,100%일때)
위의 트랜지션과 비슷하게 딜레이 옵션을 보유하고 있고, 
특정하게 실행 횟수를 지정하거나 무한 반복을 시킬 수 있습니다. 가령, infinite를 선언해 줄 경우,
애니메이션의 반복 횟수가 무한으로 늘어납니다. 
from, to 키워드를 통해 실행방향을 지정해 주어야 합니다.
키프레임에서의 direction 속성은 애니메이션의 재생의 방향을 지정할 수 있습니다. 
여기서는 normal(순방향(기본값)) / reverse(역방향) / alternate(순, 역으로 지그재그 재생) / alternate-reverse(역, 순으로 지그재그 재생)
애니메이션의 재생 방향 속성은 매우 어렵고 복잡하므로 각 애니메이션 별로 지정을 하나하나 하는 것을 추천하지만, 
애초에 애니메이션 거의 안쓰니까 큰걱정마세요(강사님)

iframe = a 태그의 href 처럼 이동 링크 제공
_ 비어있는 언더바 > target self
_ parent > target 부모 요소
_ name > target name

________________________________________________________________________________________________________________________________________________

float 사용시 항상 어느 지점쯤까지 영향을 미치겠다, 하는 부분을 반드시 알고 있어야 함

position과 float의 차이점은 일단 속도, position은 float를 이용해서 배치한 이후에 특별한 아이들을 제어하여 위치시키는 것을 의미함.

y값이 아래로 갈수록 늘어나고, x값이 우측으로 갈수록 늘어나는 것, 그리고 항상 좌상단이 0,0 을 의미하는 것을 알아야 한다. 

position - fixed (옆의 툴바 느낌)

static - 좌표값은 무조건 

주소값 자체에 따른 접근방식이 생기다 보니 
메서드 사용 전과 후에 따른 원본값을 이해해야 한다

slice 함수의 경우 slice(num a, num b); a 이상 b 미만의 인덱스까지 자르기 
자바에서의 split 의 경우 문자열을 배열로 바꾸는 것
세퍼레이터 기준으로 나눈다. 세퍼레이터란 구분자를 의미
자바스크립트에서의 join 은 배열을 문자열로 바꿔준다.

split 함수를 ""를 이용하여 잘라낼 경우 각각의 요소를 잘라내어 반환한다.
자바에서 join을 쓰려면 String.join(배열, 구분자)  형식으로 사용했었다.

스태틱 키워드
인스턴스 메서드는 인스턴스 대상으로 작업하기 위해서,,

자바와 달리 자바의 함수에서는 반환타입도 없고 파라미터도 없다. 

연산자의 활용에 있어 어려움이 있다면 사실 함수의 구조를 파악하거나 프로그램을 빌드업할때 문제가 발생할 수 있다.

arguments 라고 하면 모든 가변 인자를 포함한다. 거기다가 배열 형식이라 다른 방식의 기능들을 많이 활용 가능.

csre sql 

자바에서의 메서드가 람다식이 되어지는 과정은 매우 어려웠었는데,, 자바스크립트는 생각보다 어렵지 않다.

람다식, 애로우펑션은 

콜백 함수는 어떤 함수든 이벤트든 발생한 후, 수행될 함수를 의미한다. 
함수를 전달할 수 있기 때문에 콜백함수가 가능하다. 
자바스크립트는 함수 자체도 리턴이 가능하다. 

JS에서 지역변수란 함수 내부에서 선언한 변수를 의미한다. 그러니까 지역변수는 값에 맞는 초기화를 진행할 것이고 
이에 따라서 지역의 위치에서 함수의 호출을 동반한다.
전역변수란 지역변수가 아닌 변수를 의미한다.

변수는 호이스팅을 통해 언제나 상단으로 올라가서 undefined 값을 가진다.
하지만 호이스팅은 각각의 스코프별로 따로따로 이루어진다. 한번에 모두 이루어지는것은 맞지만,
겉의 스코프 먼저 실행한 뒤에야 호출이 되는 것이다. 즉 메서드의 경우 자기 시점에서 보았을 때
자기가 호출될 때 비로소 호이스팅을 실행한다는 것이다.

Closure, 클로저는 지역변수가 함수 종료 후에도 남아 있는 현상
최소 조건은, 함수를 리턴하는 것이다.
클로저는 특히 콜백 개념에서 뎁스(블럭의 깊이)를 줄이고 축약할 때 사용한다. 
(비슷한 느낌으로 프로미스(promise) 가 있다.)

isNan / isFinite

URL, URI 
Uniformed Resource Locator
ㄴ 웹주소. 네트워크상에서 웹페이지가 어디에 있는지 나타내는 주소.
Uniformed Resource Identifier
ㄴ 자원을 나타내는 유일한 주소. 웹페이지를 식별할 수 있게끔 나타내는 주소.

자바에서 맵은 이터레이트 인터페이스가 구현되어 있지 않았어서 for 문을 통해 조회할 수 없었다.
이를 셋으로 바꾸어서(키셋, 엔트리셋) 조회하곤 했는데,,
인덱스가 없는 요소였기 때문에 향상포문을 썼었다. 

자바스크립트에서는 위 요소를 다시 수정하여 for - in 구문을 사용한다.

for(let i in obj){

}

위 obj에는 모든 오브젝트 타입이 들어갈 수 있다. 

